<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>亚里士朱德的博客</title>
    <link>http://yalishizhude.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>专注web技术分享</description>
    <pubDate>Wed, 28 Aug 2019 15:33:30 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>从今天开始，成为一名了不起的JavaScript工程师！</title>
      <link>http://yalishizhude.com/2019/08/28/book/</link>
      <guid>http://yalishizhude.com/2019/08/28/book/</guid>
      <pubDate>Wed, 28 Aug 2019 15:23:35 GMT</pubDate>
      <description>
      
        &lt;p&gt;一部站在工程师角度，帮助前端工程师提升能力和视野的书上架了！&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/08/28/book/#disqus_thread</comments>
    </item>
    
    <item>
      <title>钢铁侠是怎样炼成的：一段给人启示的英雄传奇</title>
      <link>http://yalishizhude.com/2019/08/07/iron-man/</link>
      <guid>http://yalishizhude.com/2019/08/07/iron-man/</guid>
      <pubDate>Wed, 07 Aug 2019 13:17:32 GMT</pubDate>
      <description>
      
        &lt;p&gt;被称为硅谷钢铁侠的埃隆·马斯克（Elon Musk），&lt;br&gt;是继乔布斯之后，硅谷最受瞩目的创业家和实业家。&lt;br&gt;也是电影《钢铁侠》的原型。&lt;br&gt;取得了很多令人艳羡的成就：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拥有电动汽车标杆品牌特斯拉，&lt;/li&gt;
&lt;li&gt;创立了世界上最稳定的火箭运营商Space X，&lt;/li&gt;
&lt;li&gt;国际支付公司PayPal的联合创始人，&lt;/li&gt;
&lt;li&gt;美国最大太阳能公司Solar City最大股东&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而普通人能取得以上任何一项成就足以称为成功。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/08/07/iron-man/#disqus_thread</comments>
    </item>
    
    <item>
      <title>普通人如何做到“我命由我不由天”</title>
      <link>http://yalishizhude.com/2019/08/04/atomic-habits/</link>
      <guid>http://yalishizhude.com/2019/08/04/atomic-habits/</guid>
      <pubDate>Sun, 04 Aug 2019 14:26:24 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;掌控习惯就是掌控人生的开始~&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/08/04/atomic-habits/#disqus_thread</comments>
    </item>
    
    <item>
      <title>从JavaScript到Python之异常</title>
      <link>http://yalishizhude.com/2019/08/01/js2py-exception/</link>
      <guid>http://yalishizhude.com/2019/08/01/js2py-exception/</guid>
      <pubDate>Thu, 01 Aug 2019 00:59:12 GMT</pubDate>
      <description>
      
        &lt;p&gt;不少前端工程师看到这个标题可能会产生质问：&lt;/p&gt;
&lt;p&gt;我js用得好好的，能后端能APP，为什么还要学习Python？&lt;/p&gt;
&lt;p&gt;至少有下面两个理由：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;学习曲线。ES6之后的JavaScript(TypeScript)的在语法上和Python有很多异曲同工的地方，所以学习曲线非常平滑，上手难度很低。&lt;/li&gt;
&lt;li&gt;应用场景。JavaScript虽然是web开发的王者，但是其在某些方面还是存在一些问题的。比如Node.js虽然可以写后端，但大多用于CGI层，做接口整合和模板渲染，而Python、Java这类语言已被广泛应用于后端服务编写，同时Python在做机器学习等方面也很有优势。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这篇文章我们通过对比两种语言之间的“异常”来学习Python。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/08/01/js2py-exception/#disqus_thread</comments>
    </item>
    
    <item>
      <title>我的页面我做主——浏览器去广告正确姿势</title>
      <link>http://yalishizhude.com/2019/07/22/tampermonkey-ad/</link>
      <guid>http://yalishizhude.com/2019/07/22/tampermonkey-ad/</guid>
      <pubDate>Mon, 22 Jul 2019 10:14:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;会CSS就会去广告~&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/07/22/tampermonkey-ad/#disqus_thread</comments>
    </item>
    
    <item>
      <title>你了解HTTPS，但你可能不了解X.509</title>
      <link>http://yalishizhude.com/2019/06/12/x509/</link>
      <guid>http://yalishizhude.com/2019/06/12/x509/</guid>
      <pubDate>Tue, 11 Jun 2019 17:06:43 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;世上根本就没有HTTPS协议，只有HTTP协议。——知乎某答友&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/06/12/x509/#disqus_thread</comments>
    </item>
    
    <item>
      <title>mxGraph使用经验总结</title>
      <link>http://yalishizhude.com/2019/05/21/mxgraph-knowledge-point/</link>
      <guid>http://yalishizhude.com/2019/05/21/mxgraph-knowledge-point/</guid>
      <pubDate>Mon, 20 May 2019 17:52:06 GMT</pubDate>
      <description>
      
        &lt;p&gt;mxGraph是一个支持多种语言（Java、JavaScript、PHP、.NET）的画图框架，所绘制的图形可以在主流浏览器以及原生应用上使用。&lt;br&gt;mxGraph官方资料全英文，网上有几篇mxGraph的教程，对于“入门”和“使用”讲解得比较详细。&lt;br&gt;所以这篇文章不是介绍如何画一个图形，写一个hello world，而是重点介绍学习mxGraph时觉得比较重要的、难以理解的或者容易被忽略的知识点。&lt;br&gt;需要读者对mxGraph的文档有一定的了解或者使用mxGraph。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/05/21/mxgraph-knowledge-point/#disqus_thread</comments>
    </item>
    
    <item>
      <title>道路千万条，安全第一条——一次服务器被入侵的处理经过</title>
      <link>http://yalishizhude.com/2019/04/30/docker-api-loophole/</link>
      <guid>http://yalishizhude.com/2019/04/30/docker-api-loophole/</guid>
      <pubDate>Mon, 29 Apr 2019 17:09:03 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;容器为何自动停止？&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;服务器为何操作卡顿？&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;进程的神秘连接到底指向何处？&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/04/30/docker-api-loophole/#disqus_thread</comments>
    </item>
    
    <item>
      <title>多个跨云服务器之间满带宽测速的一种实现方案</title>
      <link>http://yalishizhude.com/2019/03/31/test-speed/</link>
      <guid>http://yalishizhude.com/2019/03/31/test-speed/</guid>
      <pubDate>Sun, 31 Mar 2019 15:01:25 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;量变引起质变。&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/03/31/test-speed/#disqus_thread</comments>
    </item>
    
    <item>
      <title>无依赖开发之封装DOM</title>
      <link>http://yalishizhude.com/2018/12/21/data-bingding/</link>
      <guid>http://yalishizhude.com/2018/12/21/data-bingding/</guid>
      <pubDate>Thu, 20 Dec 2018 21:40:41 GMT</pubDate>
      <description>
      
        &lt;p&gt;在&lt;a href=&quot;https://tech.gtxlab.com/web-components.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《抛开 Vue、React、JQuery 这类第三方js，我们该怎么写代码？》&lt;/a&gt;文章中提到了使用原生的web components技术来开发项目。开发中碰到了一些有挑战性的问题，这篇文章就来记录一下在封装DOM操作时碰到的问题以及解决方式。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/12/21/data-bingding/#disqus_thread</comments>
    </item>
    
    <item>
      <title>抛开 Vue、React、JQuery 这类第三方js，我们该怎么写代码？</title>
      <link>http://yalishizhude.com/2018/11/14/web-components/</link>
      <guid>http://yalishizhude.com/2018/11/14/web-components/</guid>
      <pubDate>Wed, 14 Nov 2018 13:06:41 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;首先感谢React、Vue、Angular、Cycle、JQuery 等这些第三方js为开发带来的便利。&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以下将Vue、React这类常用的框架（库）统称为“第三方js”。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/11/14/web-components/#disqus_thread</comments>
    </item>
    
    <item>
      <title>利用Docker容器实现代理转发和数据备份</title>
      <link>http://yalishizhude.com/2018/10/29/container-task/</link>
      <guid>http://yalishizhude.com/2018/10/29/container-task/</guid>
      <pubDate>Sun, 28 Oct 2018 19:21:16 GMT</pubDate>
      <description>
      
        &lt;p&gt;我们将应用以Docker容器的方式部署到服务器上的时候，通常需要考虑两个方面的的问题：网络和存储。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/10/29/container-task/#disqus_thread</comments>
    </item>
    
    <item>
      <title>RxJS进阶——关于流的理解和应用</title>
      <link>http://yalishizhude.com/2018/09/30/rxjs-stream/</link>
      <guid>http://yalishizhude.com/2018/09/30/rxjs-stream/</guid>
      <pubDate>Sun, 30 Sep 2018 04:22:48 GMT</pubDate>
      <description>
      
        &lt;p&gt;RxJS是微软公司推出的响应式编程的JavaScript库。&lt;br&gt;对于它的学习，最开始我的理解是把它当成是 &lt;strong&gt;能优雅地解决异步问题的lodash&lt;/strong&gt;。&lt;br&gt;随着学习的深入，发现它采用了订阅者模式，其中也带有纯函数的思想。&lt;br&gt;直到在使用了RxJS 6之后才了解其少有人意识到的另一面——流。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/09/30/rxjs-stream/#disqus_thread</comments>
    </item>
    
    <item>
      <title>用7段代码来理解常用的写作模式</title>
      <link>http://yalishizhude.com/2018/08/26/writing-schema/</link>
      <guid>http://yalishizhude.com/2018/08/26/writing-schema/</guid>
      <pubDate>Sat, 25 Aug 2018 23:02:53 GMT</pubDate>
      <description>
      
        &lt;p&gt;对于开发者来说，“设计模式”这个概念肯定不陌生，它是经过分类的、代码设计经验的总结，能将编写代码进行工程化，从而提升开发效率。&lt;br&gt;简而言之，它就是“代码模板”。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;设计模式 + 代码逻辑 =&amp;gt; 清晰高效的程序&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;“写作模式”这个叫法也借鉴于此，是我针对一些热门技术文章的写作方式进行的总结，能帮我们快速地构思出结构清晰的文章。&lt;br&gt;下面通过7篇热门技术文章来总结7种写作模式。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/08/26/writing-schema/#disqus_thread</comments>
    </item>
    
    <item>
      <title>3种常见的代码规范类型</title>
      <link>http://yalishizhude.com/2018/07/20/code-rules/</link>
      <guid>http://yalishizhude.com/2018/07/20/code-rules/</guid>
      <pubDate>Thu, 19 Jul 2018 21:01:25 GMT</pubDate>
      <description>
      
        &lt;p&gt;从事web开发已有7个年头，经历过几个团队和不少项目，也面试过一些开发者。&lt;br&gt;发现不同公司对代码规范这一块的要求相差很大，有的公司甚至没有规范。&lt;br&gt;究其缘由，无非是项目紧张，没有时间整理。&lt;br&gt;久而久之，随着项目不断变大，维护变得困难，各种问题暴露出来：代码可读性差、修改容易出bug、逻辑混乱。。。&lt;br&gt;所以在技术上稍有追求的团队都意识到规范的重要性。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/07/20/code-rules/#disqus_thread</comments>
    </item>
    
    <item>
      <title>动态分栏布局实现</title>
      <link>http://yalishizhude.com/2018/06/12/ls/</link>
      <guid>http://yalishizhude.com/2018/06/12/ls/</guid>
      <pubDate>Tue, 12 Jun 2018 12:28:28 GMT</pubDate>
      <description>
      
        &lt;p&gt;最近项目上要在浏览器端实现一个类似 Linux 下 &lt;code&gt;ls&lt;/code&gt; 命令的显示效果。虽然实现过程没花多长时间，但是觉得这个效果还挺赞的，所以分享一下。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/06/12/ls/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CKA认证考试心得</title>
      <link>http://yalishizhude.com/2018/05/13/cka/</link>
      <guid>http://yalishizhude.com/2018/05/13/cka/</guid>
      <pubDate>Sun, 13 May 2018 12:13:41 GMT</pubDate>
      <description>
      
        &lt;p&gt;上周四通过了一次国外的考试，关于考试内容和形式应该大部分读者都没有遇到过，所以写这篇文章和大家分享一下。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;如果你对考试内容或者Kubernetes不感兴趣可以直接阅读考试总结部分。&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/05/13/cka/#disqus_thread</comments>
    </item>
    
    <item>
      <title>PC端MPA和移动端SPA的路由同构</title>
      <link>http://yalishizhude.com/2018/03/28/router4mpa-spa/</link>
      <guid>http://yalishizhude.com/2018/03/28/router4mpa-spa/</guid>
      <pubDate>Wed, 28 Mar 2018 06:34:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;同一个路由，不同的架构~&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/03/28/router4mpa-spa/#disqus_thread</comments>
    </item>
    
    <item>
      <title>RxWX又添新成员</title>
      <link>http://yalishizhude.com/2018/03/23/supplement4rxwx/</link>
      <guid>http://yalishizhude.com/2018/03/23/supplement4rxwx/</guid>
      <pubDate>Fri, 23 Mar 2018 07:03:54 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;RxWX简介：&lt;a href=&quot;https://github.com/yalishizhude/RxWX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RxWX&lt;/a&gt;是可以让你写出更高效更优雅微信小程序的开源项目，它主要完成了两项工作：将RxJS移植到小程序端和将wx原生API转化成Observable对象。&lt;/em&gt;&lt;br&gt;&lt;em&gt;项目地址：&lt;a href=&quot;https://github.com/yalishizhude/RxWX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/yalishizhude/RxWX&lt;/a&gt;&lt;/em&gt;&lt;br&gt;&lt;em&gt;npm模块名：rxjs-wx&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;感谢开发者的支持和关注，使得RxWX项目不断迭代和进步，新版本得RxWX根据小程序新的API和issue中大家提出的问题，进行了一些优化和修复。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/03/23/supplement4rxwx/#disqus_thread</comments>
    </item>
    
    <item>
      <title>是时候给你的GitHub账号做个总结了</title>
      <link>http://yalishizhude.com/2017/12/23/github-summary/</link>
      <guid>http://yalishizhude.com/2017/12/23/github-summary/</guid>
      <pubDate>Sat, 23 Dec 2017 06:53:57 GMT</pubDate>
      <description>
      
        &lt;p&gt;时间飞逝，2017年转眼就要过去了，又到了写总结的时候了。怎么给自己为开源项目写的代码做个总结？&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2017/12/23/github-summary/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
