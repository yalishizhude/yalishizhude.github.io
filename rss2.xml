<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>亚里士朱德的博客</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>web技术分享</description>
    <pubDate>Tue, 12 Jun 2018 14:16:32 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>动态分栏布局实现</title>
      <link>http://yoursite.com/2018/06/12/ls/</link>
      <guid>http://yoursite.com/2018/06/12/ls/</guid>
      <pubDate>Tue, 12 Jun 2018 12:28:28 GMT</pubDate>
      <description>
      
        &lt;p&gt;最近项目上要在浏览器端实现一个类似 Linux 下 &lt;code&gt;ls&lt;/code&gt; 命令的显示效果。虽然实现过程没花多长时间，但是觉得这个效果还挺赞的，所以分享一下。&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2018/06/12/ls/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CKA认证考试心得</title>
      <link>http://yoursite.com/2018/05/13/cka/</link>
      <guid>http://yoursite.com/2018/05/13/cka/</guid>
      <pubDate>Sun, 13 May 2018 12:13:41 GMT</pubDate>
      <description>
      
        &lt;p&gt;上周四通过了一次国外的考试，关于考试内容和形式应该大部分读者都没有遇到过，所以写这篇文章和大家分享一下。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;如果你对考试内容或者Kubernetes不感兴趣可以直接阅读考试总结部分。&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2018/05/13/cka/#disqus_thread</comments>
    </item>
    
    <item>
      <title>PC端MPA和移动端SPA的路由同构</title>
      <link>http://yoursite.com/2018/03/28/router4mpa-spa/</link>
      <guid>http://yoursite.com/2018/03/28/router4mpa-spa/</guid>
      <pubDate>Wed, 28 Mar 2018 06:34:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;同一个路由，不同的架构~&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2018/03/28/router4mpa-spa/#disqus_thread</comments>
    </item>
    
    <item>
      <title>RxWX又添新成员</title>
      <link>http://yoursite.com/2018/03/23/supplement4rxwx/</link>
      <guid>http://yoursite.com/2018/03/23/supplement4rxwx/</guid>
      <pubDate>Fri, 23 Mar 2018 07:03:54 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;RxWX简介：&lt;a href=&quot;https://github.com/yalishizhude/RxWX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RxWX&lt;/a&gt;是可以让你写出更高效更优雅微信小程序的开源项目，它主要完成了两项工作：将RxJS移植到小程序端和将wx原生API转化成Observable对象。&lt;/em&gt;&lt;br&gt;&lt;em&gt;项目地址：&lt;a href=&quot;https://github.com/yalishizhude/RxWX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/yalishizhude/RxWX&lt;/a&gt;&lt;/em&gt;&lt;br&gt;&lt;em&gt;npm模块名：rxjs-wx&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;感谢开发者的支持和关注，使得RxWX项目不断迭代和进步，新版本得RxWX根据小程序新的API和issue中大家提出的问题，进行了一些优化和修复。&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2018/03/23/supplement4rxwx/#disqus_thread</comments>
    </item>
    
    <item>
      <title>是时候给你的GitHub账号做个总结了</title>
      <link>http://yoursite.com/2017/12/23/github-summary/</link>
      <guid>http://yoursite.com/2017/12/23/github-summary/</guid>
      <pubDate>Sat, 23 Dec 2017 06:53:57 GMT</pubDate>
      <description>
      
        &lt;p&gt;时间飞逝，2017年转眼就要过去了，又到了写总结的时候了。怎么给自己为开源项目写的代码做个总结？&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/12/23/github-summary/#disqus_thread</comments>
    </item>
    
    <item>
      <title>RxWX使用教程</title>
      <link>http://yoursite.com/2017/12/16/intro2rxwx/</link>
      <guid>http://yoursite.com/2017/12/16/intro2rxwx/</guid>
      <pubDate>Sat, 16 Dec 2017 11:52:24 GMT</pubDate>
      <description>
      
        &lt;p&gt;之前写过一个开源项目&lt;a href=&quot;https://github.com/yalishizhude/RxWX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RxWX&lt;/a&gt;，将RxJS移植到微信小程序（以下简称”小程序“）中。&lt;/p&gt;
&lt;p&gt;RxWX项目地址和介绍：&lt;a href=&quot;https://github.com/yalishizhude/RxWX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/yalishizhude/RxWX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于RxJS的介绍，读者可以去看&lt;a href=&quot;http://reactivex.io/rxjs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方说明&lt;/a&gt;或者关注公众号“Web学习社”的后续文章介绍，这篇文章主要讲解RxWX的几个使用场景。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;微信小程序SDK版本：1.7.0&lt;/em&gt;&lt;br&gt;&lt;em&gt;微信开发者工具版本：1.01&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/12/16/intro2rxwx/#disqus_thread</comments>
    </item>
    
    <item>
      <title>在Windows10下安装Minikube</title>
      <link>http://yoursite.com/2017/12/15/minikube-setup/</link>
      <guid>http://yoursite.com/2017/12/15/minikube-setup/</guid>
      <pubDate>Fri, 15 Dec 2017 14:08:34 GMT</pubDate>
      <description>
      
        &lt;p&gt;花了两天时间，终于将Minikube部署成功了，心情久久不能平静，于是写篇文章纪念一下，顺便提醒后来者，避免踩坑~&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/12/15/minikube-setup/#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用vue-cli的webpack模板的一次优化</title>
      <link>http://yoursite.com/2017/12/05/webpack-big-file-optimize/</link>
      <guid>http://yoursite.com/2017/12/05/webpack-big-file-optimize/</guid>
      <pubDate>Tue, 05 Dec 2017 14:26:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;使用过vuejs的开发者一定对vue-cli不陌生，这个命令行工具提供了几个常用的搭建项目的模板，目前官方支持6个模板：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;webpack &lt;/li&gt;
&lt;li&gt;webpack-simple&lt;/li&gt;
&lt;li&gt;browserify&lt;/li&gt;
&lt;li&gt;browserify-simple&lt;/li&gt;
&lt;li&gt;pwa&lt;/li&gt;
&lt;li&gt;simple&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/12/05/webpack-big-file-optimize/#disqus_thread</comments>
    </item>
    
    <item>
      <title>编写Web组件的6个建议</title>
      <link>http://yoursite.com/2017/11/17/web-component/</link>
      <guid>http://yoursite.com/2017/11/17/web-component/</guid>
      <pubDate>Fri, 17 Nov 2017 13:11:38 GMT</pubDate>
      <description>
      
        &lt;p&gt;“组件化”是近几年web前端开发的趋势，关于如何设计出好的组件，本文总结了6点经验，希望对读者有所帮助。&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/11/17/web-component/#disqus_thread</comments>
    </item>
    
    <item>
      <title>让你的JavaScript成为真正的Java Script</title>
      <link>http://yoursite.com/2017/10/26/js2js/</link>
      <guid>http://yoursite.com/2017/10/26/js2js/</guid>
      <pubDate>Thu, 26 Oct 2017 00:59:12 GMT</pubDate>
      <description>
      
        &lt;p&gt;JavaScript为什么叫“JavaScript”？&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/10/26/js2js/#disqus_thread</comments>
    </item>
    
    <item>
      <title>从架构到重构</title>
      <link>http://yoursite.com/2017/09/07/architecture2restruct/</link>
      <guid>http://yoursite.com/2017/09/07/architecture2restruct/</guid>
      <pubDate>Thu, 07 Sep 2017 08:09:29 GMT</pubDate>
      <description>
      
        &lt;p&gt;重构之后整理了一下对架构的理解，偏重但不仅限于Web前端（以下简称“前端”）。&lt;/p&gt;
&lt;h1 id=&quot;架构师的职责&quot;&gt;&lt;a href=&quot;#架构师的职责&quot; class=&quot;headerlink&quot; title=&quot;架构师的职责&quot;&gt;&lt;/a&gt;架构师的职责&lt;/h1&gt;&lt;p&gt;不少人一提到架构师就觉得很高大上，什么是架构师？&lt;/p&gt;
&lt;p&gt;从上千人跨国公司，到十数人的创业公司，架构师的职责各有不同。&lt;/p&gt;
&lt;p&gt;人数众多的IT公司通常会分成架构（框架）组和业务组，架构（框架）组为业务组提供公用的框架和组件（服务），而业务组负责开发实现需求。&lt;/p&gt;
&lt;p&gt;创业公司的分工通常没有那么细致，往往需要开发者通常既是架构师也是业务开发者（以下简称为“开发者”）。&lt;/p&gt;
&lt;p&gt;开发者承担的责任是某个功能模块的实现，而架构师的主要责任是为项目选择合适地技术栈，为开发者搭建一个可持续开发的框架。&lt;/p&gt;
&lt;p&gt;通常情况下，责任和权利是对等的，这也是架构师的收入和职位比开发者高的原因。&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/09/07/architecture2restruct/#disqus_thread</comments>
    </item>
    
    <item>
      <title>小程序表单优化</title>
      <link>http://yoursite.com/2017/08/21/miniprogram-form/</link>
      <guid>http://yoursite.com/2017/08/21/miniprogram-form/</guid>
      <pubDate>Mon, 21 Aug 2017 08:09:13 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;小程序SDK版本 1.4&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;表单校验之难&quot;&gt;&lt;a href=&quot;#表单校验之难&quot; class=&quot;headerlink&quot; title=&quot;表单校验之难&quot;&gt;&lt;/a&gt;表单校验之难&lt;/h1&gt;&lt;p&gt;如果要问微信小程序最难实现的公共业务是什么？应该是&lt;strong&gt;表单校验&lt;/strong&gt;，没有之一。原因如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表单组件在数量上达到11个，居各类组件之首。当然幸运的是，并不是所有的都需要校验。&lt;/li&gt;
&lt;li&gt;而这些组件操作方式多样，可分为滑动、（多行）输入、点击、点击+滑动。&lt;/li&gt;
&lt;li&gt;即使是同一个组件，因为业务场景不同就会有不同的校验规则。&lt;/li&gt;
&lt;li&gt;更麻烦的是，这些组件之间经常还会联动或者关联校验。&lt;br&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是，作为一个非简单静态页面，有着较多用户交互的小程序，表单校验又是一个非常常用的功能：登录、注册、新增、编辑…&lt;/p&gt;
&lt;p&gt;总而言之：表单组件的多样性 X 校验规则的多样性 = 复杂的公共业务&lt;/p&gt;
&lt;p&gt;这么棘手的问题我们怎么来解决它呢？&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/08/21/miniprogram-form/#disqus_thread</comments>
    </item>
    
    <item>
      <title>w3ctech长沙站—8月前端开发专场讲稿</title>
      <link>http://yoursite.com/2017/08/19/miniprogram-share/</link>
      <guid>http://yoursite.com/2017/08/19/miniprogram-share/</guid>
      <pubDate>Sat, 19 Aug 2017 15:33:58 GMT</pubDate>
      <description>
      
        &lt;p&gt;今天和大家交流分享的是关于微信小程序的一些开发心得。&lt;br&gt;包括4个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;个人简介。包括我所在的公司和个人的一些情况。&lt;/li&gt;
&lt;li&gt;小程序的介绍。讲述为什么前端开发者要学习小程序开发以及官方为开发者提供了哪些有价值的资源。&lt;/li&gt;
&lt;li&gt;小程序与WebApp对比。熟悉WebApp的开发者怎样快速掌握小程序开发，小程序和WebApp有哪些异同点。&lt;/li&gt;
&lt;li&gt;小程序开发技巧。分享我在开发小程序时碰到的一些问题和解决方法。&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/08/19/miniprogram-share/#disqus_thread</comments>
    </item>
    
    <item>
      <title>微信小程序组件化（下）</title>
      <link>http://yoursite.com/2017/08/14/minprogram-component-2/</link>
      <guid>http://yoursite.com/2017/08/14/minprogram-component-2/</guid>
      <pubDate>Mon, 14 Aug 2017 06:35:21 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;代码实现&quot;&gt;&lt;a href=&quot;#代码实现&quot; class=&quot;headerlink&quot; title=&quot;代码实现&quot;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;p&gt;单从组件功能而言，wepy已经满足了小程序绝大部分的组件开发需求，堪称完美。&lt;br&gt;但如果权衡整个项目：&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/08/14/minprogram-component-2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>微信小程序组件化（上）</title>
      <link>http://yoursite.com/2017/08/14/minprogram-component-1/</link>
      <guid>http://yoursite.com/2017/08/14/minprogram-component-1/</guid>
      <pubDate>Mon, 14 Aug 2017 06:35:17 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;小程序对组件化的“支持”情况&quot;&gt;&lt;a href=&quot;#小程序对组件化的“支持”情况&quot; class=&quot;headerlink&quot; title=&quot;小程序对组件化的“支持”情况&quot;&gt;&lt;/a&gt;小程序对组件化的“支持”情况&lt;/h1&gt;&lt;p&gt;微信小程序（以下简称“小程序”，版本）虽然默认定义了很多有用的组件，但是在开发小程序过程中，往往需要自定义业务组件。&lt;br&gt;而小程序开发者文档中却未对自定义组件给出很好的解决方案或示例。&lt;br&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/08/14/minprogram-component-1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>利用Docker容器搭建高效的Node.js开发环境</title>
      <link>http://yoursite.com/2017/08/10/docker4node/</link>
      <guid>http://yoursite.com/2017/08/10/docker4node/</guid>
      <pubDate>Wed, 09 Aug 2017 22:19:18 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;阅读时间：15分钟&lt;/em&gt; &lt;/p&gt;
&lt;h1 id=&quot;使用Node-js遇到的问题&quot;&gt;&lt;a href=&quot;#使用Node-js遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;使用Node.js遇到的问题&quot;&gt;&lt;/a&gt;使用Node.js遇到的问题&lt;/h1&gt;&lt;p&gt;Node.js无疑是js开发者的福音，因为它既可用于web端开发，当作构建工具，也可以用于服务端，搭建web服务器。&lt;/p&gt;
&lt;p&gt;但使用Node.js（尤其是npm）时也会碰到一些麻烦的事情，比如：&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/08/10/docker4node/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【译】REST的6个约束</title>
      <link>http://yoursite.com/2017/07/25/rest-constraints/</link>
      <guid>http://yoursite.com/2017/07/25/rest-constraints/</guid>
      <pubDate>Mon, 24 Jul 2017 18:02:54 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;原文链接：&lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer#Client-server&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://en.wikipedia.org/wiki/Representational_state_transfer#Client-server&lt;/a&gt;&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;定义个一个RESTful系统的时候应该遵循6个约束。&lt;br&gt;它们限制了服务端只能遵循这些约束来处理和响应客户端请求，但是遵循这些约束服务也可以获取理想的非函数化的属性，例如性能、可伸缩、简单程度、可变能力、可见度、灵活性、可信度。&lt;br&gt;如果任何一个服务违背了其中一个原则，将不能被称作RESTful系统。&lt;br&gt;标准的REST约束如下：&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/07/25/rest-constraints/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Angular的依赖注入是怎么实现的？</title>
      <link>http://yoursite.com/2017/06/26/angular-di/</link>
      <guid>http://yoursite.com/2017/06/26/angular-di/</guid>
      <pubDate>Mon, 26 Jun 2017 06:01:08 GMT</pubDate>
      <description>
      
        &lt;p&gt;这篇文章是探索对于Angular开发者来说既熟悉又陌生的概念：依赖注入。&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/06/26/angular-di/#disqus_thread</comments>
    </item>
    
    <item>
      <title>为什么你的Angular双向数据绑定会失效？</title>
      <link>http://yoursite.com/2017/06/20/angular-databinding/</link>
      <guid>http://yoursite.com/2017/06/20/angular-databinding/</guid>
      <pubDate>Tue, 20 Jun 2017 07:56:48 GMT</pubDate>
      <description>
      
        &lt;p&gt;Angular双向数据绑定原理探究。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;文章源码引用较多，觉得难以理解可以直接跳到末尾总结处。&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/06/20/angular-databinding/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vueconf杂谈</title>
      <link>http://yoursite.com/2017/06/02/vueconf/</link>
      <guid>http://yoursite.com/2017/06/02/vueconf/</guid>
      <pubDate>Fri, 02 Jun 2017 06:16:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;首先感谢大组织w3ctech分享的vueconf相关&lt;a href=&quot;https://vue.w3ctech.com/#schedule&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ppt和视频&lt;/a&gt;。&lt;/p&gt;
      
      </description>
      
      <comments>http://yoursite.com/2017/06/02/vueconf/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
