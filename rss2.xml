<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>web学习社</title>
    <link>http://yalishizhude.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>web技术分享</description>
    <pubDate>Sat, 25 May 2019 06:20:53 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>mxGraph使用经验总结</title>
      <link>http://yalishizhude.com/2019/05/21/mxgraph-knowledge-point/</link>
      <guid>http://yalishizhude.com/2019/05/21/mxgraph-knowledge-point/</guid>
      <pubDate>Mon, 20 May 2019 17:52:06 GMT</pubDate>
      <description>
      
        &lt;p&gt;mxGraph是一个支持多种语言（Java、JavaScript、PHP、.NET）的画图框架，所绘制的图形可以在主流浏览器以及原生应用上使用。&lt;br&gt;mxGraph官方资料全英文，网上有几篇mxGraph的教程，对于“入门”和“使用”讲解得比较详细。&lt;br&gt;所以这篇文章不是介绍如何画一个图形，写一个hello world，而是重点介绍学习mxGraph时觉得比较重要的、难以理解的或者容易被忽略的知识点。&lt;br&gt;需要读者对mxGraph的文档有一定的了解或者使用mxGraph。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/05/21/mxgraph-knowledge-point/#disqus_thread</comments>
    </item>
    
    <item>
      <title>道路千万条，安全第一条——一次服务器被入侵的处理经过</title>
      <link>http://yalishizhude.com/2019/04/30/docker-api-loophole/</link>
      <guid>http://yalishizhude.com/2019/04/30/docker-api-loophole/</guid>
      <pubDate>Mon, 29 Apr 2019 17:09:03 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;容器为何自动停止？&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;服务器为何操作卡顿？&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;进程的神秘连接到底指向何处？&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/04/30/docker-api-loophole/#disqus_thread</comments>
    </item>
    
    <item>
      <title>多个跨云服务器之间满带宽测速的一种实现方案</title>
      <link>http://yalishizhude.com/2019/03/31/test-speed/</link>
      <guid>http://yalishizhude.com/2019/03/31/test-speed/</guid>
      <pubDate>Sun, 31 Mar 2019 15:01:25 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;量变引起质变。&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2019/03/31/test-speed/#disqus_thread</comments>
    </item>
    
    <item>
      <title>无依赖开发之封装DOM</title>
      <link>http://yalishizhude.com/2018/12/21/data-bingding/</link>
      <guid>http://yalishizhude.com/2018/12/21/data-bingding/</guid>
      <pubDate>Thu, 20 Dec 2018 21:40:41 GMT</pubDate>
      <description>
      
        &lt;p&gt;在&lt;a href=&quot;https://tech.gtxlab.com/web-components.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《抛开 Vue、React、JQuery 这类第三方js，我们该怎么写代码？》&lt;/a&gt;文章中提到了使用原生的web components技术来开发项目。开发中碰到了一些有挑战性的问题，这篇文章就来记录一下在封装DOM操作时碰到的问题以及解决方式。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/12/21/data-bingding/#disqus_thread</comments>
    </item>
    
    <item>
      <title>抛开 Vue、React、JQuery 这类第三方js，我们该怎么写代码？</title>
      <link>http://yalishizhude.com/2018/11/14/web-components/</link>
      <guid>http://yalishizhude.com/2018/11/14/web-components/</guid>
      <pubDate>Wed, 14 Nov 2018 13:06:41 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;首先感谢React、Vue、Angular、Cycle、JQuery 等这些第三方js为开发带来的便利。&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以下将Vue、React这类常用的框架（库）统称为“第三方js”。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/11/14/web-components/#disqus_thread</comments>
    </item>
    
    <item>
      <title>利用Docker容器实现代理转发和数据备份</title>
      <link>http://yalishizhude.com/2018/10/29/container-task/</link>
      <guid>http://yalishizhude.com/2018/10/29/container-task/</guid>
      <pubDate>Sun, 28 Oct 2018 19:21:16 GMT</pubDate>
      <description>
      
        &lt;p&gt;我们将应用以Docker容器的方式部署到服务器上的时候，通常需要考虑两个方面的的问题：网络和存储。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/10/29/container-task/#disqus_thread</comments>
    </item>
    
    <item>
      <title>RxJS进阶——关于流的理解和应用</title>
      <link>http://yalishizhude.com/2018/09/30/rxjs-stream/</link>
      <guid>http://yalishizhude.com/2018/09/30/rxjs-stream/</guid>
      <pubDate>Sun, 30 Sep 2018 04:22:48 GMT</pubDate>
      <description>
      
        &lt;p&gt;RxJS是微软公司推出的响应式编程的JavaScript库。&lt;br&gt;对于它的学习，最开始我的理解是把它当成是 &lt;strong&gt;能优雅地解决异步问题的lodash&lt;/strong&gt;。&lt;br&gt;随着学习的深入，发现它采用了订阅者模式，其中也带有纯函数的思想。&lt;br&gt;直到在使用了RxJS 6之后才了解其少有人意识到的另一面——流。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/09/30/rxjs-stream/#disqus_thread</comments>
    </item>
    
    <item>
      <title>用7段代码来理解常用的写作模式</title>
      <link>http://yalishizhude.com/2018/08/26/writing-schema/</link>
      <guid>http://yalishizhude.com/2018/08/26/writing-schema/</guid>
      <pubDate>Sat, 25 Aug 2018 23:02:53 GMT</pubDate>
      <description>
      
        &lt;p&gt;对于开发者来说，“设计模式”这个概念肯定不陌生，它是经过分类的、代码设计经验的总结，能将编写代码进行工程化，从而提升开发效率。&lt;br&gt;简而言之，它就是“代码模板”。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;设计模式 + 代码逻辑 =&amp;gt; 清晰高效的程序&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;“写作模式”这个叫法也借鉴于此，是我针对一些热门技术文章的写作方式进行的总结，能帮我们快速地构思出结构清晰的文章。&lt;br&gt;下面通过7篇热门技术文章来总结7种写作模式。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/08/26/writing-schema/#disqus_thread</comments>
    </item>
    
    <item>
      <title>程序员读《孙子兵法》</title>
      <link>http://yalishizhude.com/2018/08/19/art-of-war/</link>
      <guid>http://yalishizhude.com/2018/08/19/art-of-war/</guid>
      <pubDate>Sun, 19 Aug 2018 01:38:29 GMT</pubDate>
      <description>
      
        &lt;p&gt;虽然《孙子兵法》是流传千年、家喻户晓的名著，但大多数人并不一定真正理解它。我之前在读它之时就有两个误解：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;《孙子兵法》讲的是奇谋巧计，教我们怎么去战胜敌人。&lt;/li&gt;
&lt;li&gt;《孙子兵法》是一本讲军事的古书，和我们普通人的现实生活相隔太远，没有太多借鉴意义。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;听完得到课程《华杉讲透孙子兵法》之后才真正窥见其奥义。那么孙子兵法的核心到底是什么？对于我们的工作又有何帮助？&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/08/19/art-of-war/#disqus_thread</comments>
    </item>
    
    <item>
      <title>3种常见的代码规范类型</title>
      <link>http://yalishizhude.com/2018/07/20/code-rules/</link>
      <guid>http://yalishizhude.com/2018/07/20/code-rules/</guid>
      <pubDate>Thu, 19 Jul 2018 21:01:25 GMT</pubDate>
      <description>
      
        &lt;p&gt;从事web开发已有7个年头，经历过几个团队和不少项目，也面试过一些开发者。&lt;br&gt;发现不同公司对代码规范这一块的要求相差很大，有的公司甚至没有规范。&lt;br&gt;究其缘由，无非是项目紧张，没有时间整理。&lt;br&gt;久而久之，随着项目不断变大，维护变得困难，各种问题暴露出来：代码可读性差、修改容易出bug、逻辑混乱。。。&lt;br&gt;所以在技术上稍有追求的团队都意识到规范的重要性。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/07/20/code-rules/#disqus_thread</comments>
    </item>
    
    <item>
      <title>动态分栏布局实现</title>
      <link>http://yalishizhude.com/2018/06/12/ls/</link>
      <guid>http://yalishizhude.com/2018/06/12/ls/</guid>
      <pubDate>Tue, 12 Jun 2018 12:28:28 GMT</pubDate>
      <description>
      
        &lt;p&gt;最近项目上要在浏览器端实现一个类似 Linux 下 &lt;code&gt;ls&lt;/code&gt; 命令的显示效果。虽然实现过程没花多长时间，但是觉得这个效果还挺赞的，所以分享一下。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/06/12/ls/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CKA认证考试心得</title>
      <link>http://yalishizhude.com/2018/05/13/cka/</link>
      <guid>http://yalishizhude.com/2018/05/13/cka/</guid>
      <pubDate>Sun, 13 May 2018 12:13:41 GMT</pubDate>
      <description>
      
        &lt;p&gt;上周四通过了一次国外的考试，关于考试内容和形式应该大部分读者都没有遇到过，所以写这篇文章和大家分享一下。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;如果你对考试内容或者Kubernetes不感兴趣可以直接阅读考试总结部分。&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/05/13/cka/#disqus_thread</comments>
    </item>
    
    <item>
      <title>PC端MPA和移动端SPA的路由同构</title>
      <link>http://yalishizhude.com/2018/03/28/router4mpa-spa/</link>
      <guid>http://yalishizhude.com/2018/03/28/router4mpa-spa/</guid>
      <pubDate>Wed, 28 Mar 2018 06:34:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;同一个路由，不同的架构~&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/03/28/router4mpa-spa/#disqus_thread</comments>
    </item>
    
    <item>
      <title>RxWX又添新成员</title>
      <link>http://yalishizhude.com/2018/03/23/supplement4rxwx/</link>
      <guid>http://yalishizhude.com/2018/03/23/supplement4rxwx/</guid>
      <pubDate>Fri, 23 Mar 2018 07:03:54 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;RxWX简介：&lt;a href=&quot;https://github.com/yalishizhude/RxWX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RxWX&lt;/a&gt;是可以让你写出更高效更优雅微信小程序的开源项目，它主要完成了两项工作：将RxJS移植到小程序端和将wx原生API转化成Observable对象。&lt;/em&gt;&lt;br&gt;&lt;em&gt;项目地址：&lt;a href=&quot;https://github.com/yalishizhude/RxWX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/yalishizhude/RxWX&lt;/a&gt;&lt;/em&gt;&lt;br&gt;&lt;em&gt;npm模块名：rxjs-wx&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;感谢开发者的支持和关注，使得RxWX项目不断迭代和进步，新版本得RxWX根据小程序新的API和issue中大家提出的问题，进行了一些优化和修复。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2018/03/23/supplement4rxwx/#disqus_thread</comments>
    </item>
    
    <item>
      <title>是时候给你的GitHub账号做个总结了</title>
      <link>http://yalishizhude.com/2017/12/23/github-summary/</link>
      <guid>http://yalishizhude.com/2017/12/23/github-summary/</guid>
      <pubDate>Sat, 23 Dec 2017 06:53:57 GMT</pubDate>
      <description>
      
        &lt;p&gt;时间飞逝，2017年转眼就要过去了，又到了写总结的时候了。怎么给自己为开源项目写的代码做个总结？&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2017/12/23/github-summary/#disqus_thread</comments>
    </item>
    
    <item>
      <title>RxWX使用教程</title>
      <link>http://yalishizhude.com/2017/12/16/intro2rxwx/</link>
      <guid>http://yalishizhude.com/2017/12/16/intro2rxwx/</guid>
      <pubDate>Sat, 16 Dec 2017 11:52:24 GMT</pubDate>
      <description>
      
        &lt;p&gt;之前写过一个开源项目&lt;a href=&quot;https://github.com/yalishizhude/RxWX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RxWX&lt;/a&gt;，将RxJS移植到微信小程序（以下简称”小程序“）中。&lt;/p&gt;
&lt;p&gt;RxWX项目地址和介绍：&lt;a href=&quot;https://github.com/yalishizhude/RxWX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/yalishizhude/RxWX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于RxJS的介绍，读者可以去看&lt;a href=&quot;http://reactivex.io/rxjs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方说明&lt;/a&gt;或者关注公众号“Web学习社”的后续文章介绍，这篇文章主要讲解RxWX的几个使用场景。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;微信小程序SDK版本：1.7.0&lt;/em&gt;&lt;br&gt;&lt;em&gt;微信开发者工具版本：1.01&lt;/em&gt;&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2017/12/16/intro2rxwx/#disqus_thread</comments>
    </item>
    
    <item>
      <title>在Windows10下安装Minikube</title>
      <link>http://yalishizhude.com/2017/12/15/minikube-setup/</link>
      <guid>http://yalishizhude.com/2017/12/15/minikube-setup/</guid>
      <pubDate>Fri, 15 Dec 2017 14:08:34 GMT</pubDate>
      <description>
      
        &lt;p&gt;花了两天时间，终于将Minikube部署成功了，心情久久不能平静，于是写篇文章纪念一下，顺便提醒后来者，避免踩坑~&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2017/12/15/minikube-setup/#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用vue-cli的webpack模板的一次优化</title>
      <link>http://yalishizhude.com/2017/12/05/webpack-big-file-optimize/</link>
      <guid>http://yalishizhude.com/2017/12/05/webpack-big-file-optimize/</guid>
      <pubDate>Tue, 05 Dec 2017 14:26:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;使用过vuejs的开发者一定对vue-cli不陌生，这个命令行工具提供了几个常用的搭建项目的模板，目前官方支持6个模板：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;webpack &lt;/li&gt;
&lt;li&gt;webpack-simple&lt;/li&gt;
&lt;li&gt;browserify&lt;/li&gt;
&lt;li&gt;browserify-simple&lt;/li&gt;
&lt;li&gt;pwa&lt;/li&gt;
&lt;li&gt;simple&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2017/12/05/webpack-big-file-optimize/#disqus_thread</comments>
    </item>
    
    <item>
      <title>编写Web组件的6个建议</title>
      <link>http://yalishizhude.com/2017/11/17/web-component/</link>
      <guid>http://yalishizhude.com/2017/11/17/web-component/</guid>
      <pubDate>Fri, 17 Nov 2017 13:11:38 GMT</pubDate>
      <description>
      
        &lt;p&gt;“组件化”是近几年web前端开发的趋势，关于如何设计出好的组件，本文总结了6点经验，希望对读者有所帮助。&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2017/11/17/web-component/#disqus_thread</comments>
    </item>
    
    <item>
      <title>让你的JavaScript成为真正的Java Script</title>
      <link>http://yalishizhude.com/2017/10/26/js2js/</link>
      <guid>http://yalishizhude.com/2017/10/26/js2js/</guid>
      <pubDate>Thu, 26 Oct 2017 00:59:12 GMT</pubDate>
      <description>
      
        &lt;p&gt;JavaScript为什么叫“JavaScript”？&lt;/p&gt;
      
      </description>
      
      <comments>http://yalishizhude.com/2017/10/26/js2js/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
